"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[347],{9620:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var o=n(3438),i=n(5627),s=n(3640);const r={sidebar_position:4,sidebar_label:"L2 Transactions"},a="The Rollup Transaction Mempool",l={id:"learn/l2-mempool",title:"The Rollup Transaction Mempool",description:"Monomer exposes the standard Cosmos BroadcastTX API endpoint for submitting cometbft transactions directly to the rollup chain.",source:"@site/docs/learn/l2-mempool.md",sourceDirName:"learn",slug:"/learn/l2-mempool",permalink:"/learn/l2-mempool",draft:!1,unlisted:!1,editUrl:"https://github.com/polymerdao/monomer/tree/main/docs/docs/learn/l2-mempool.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,sidebar_label:"L2 Transactions"},sidebar:"tutorialSidebar",previous:{title:"Withdrawals",permalink:"/learn/withdrawals"},next:{title:"Build",permalink:"/category/build"}},c={},d=[];function m(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",li:"li",ol:"ol",p:"p",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"the-rollup-transaction-mempool",children:"The Rollup Transaction Mempool"}),"\n",(0,o.jsxs)(t.p,{children:["Monomer exposes the standard Cosmos ",(0,o.jsx)(t.a,{href:"https://docs.cosmos.network/api#tag/Service/operation/BroadcastTx",children:"BroadcastTX"})," API endpoint for submitting ",(0,o.jsx)(t.a,{href:"https://pkg.go.dev/github.com/cometbft/cometbft/types#Tx",children:"cometbft transactions"})," directly to the rollup chain."]}),"\n",(0,o.jsx)(t.p,{children:"These transactions are stored in a simple mempool, and included in blocks on a first-come-first-serve basis."}),"\n",(0,o.jsx)(t.admonition,{type:"note",children:(0,o.jsx)(t.p,{children:"There are no modifications to the standard cometbft transaction format. This means that any client that can construct a cometbft transaction can interact with the Monomer rollup chain."})}),"\n",(0,o.jsx)(s.A,{alt:"Deposit workflow",sources:{light:"/img/l2-light.png",dark:"/img/l2-dark.png"}}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsxs)(t.li,{children:["A client submits a cometbft transaction to Monomer's ",(0,o.jsx)(t.code,{children:"BroadcastTx"})," endpoint."]}),"\n",(0,o.jsx)(t.li,{children:"Monomer runs some basic validation on the transaction, and if it passes, adds it to the mempool."}),"\n",(0,o.jsxs)(t.li,{children:["Sometime later, the ",(0,o.jsx)(t.code,{children:"op-node"})," initiates the production of a new block via the ",(0,o.jsx)(t.code,{children:"EngineAPI"}),"."]}),"\n",(0,o.jsxs)(t.li,{children:["The engine requests a new block from the ",(0,o.jsx)(t.code,{children:"builder"}),"."]}),"\n",(0,o.jsxs)(t.li,{children:["The ",(0,o.jsx)(t.code,{children:"builder"})," fetches transactions from the mempool, and"]}),"\n",(0,o.jsx)(t.li,{children:"constructs, via the AppChain, a new block."}),"\n"]}),"\n",(0,o.jsx)(t.admonition,{type:"warning",children:(0,o.jsx)(t.p,{children:"The builder does not currently implement any gas metering logic. This means that blocks can be arbitrarily large."})})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(m,{...e})}):m(e)}},5627:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var o=n(3790);const i={},s=o.createContext(i);function r(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);